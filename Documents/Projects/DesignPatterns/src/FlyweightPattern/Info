# SLIDE

	This is a technique for storing a large number of similar objects efficiently.
	It is similar to the proxy pattern. An example would be a word processing
	package which stores a large number of characters. Split the state of an
	object into two types. Its intrinsic state (font, style and size), shared
	by all objects. That which can be worked out from the context (position,
	colour). Only store one object for each different intrinsic state. One
	letter ‘a’, one letter ‘b’ etc. All other objects are just references to
	these basic objects. Contextual information (position, colour) is passes
	as parameters to the methods


# EXAMPLE

	Alchemist's shop has shelves full of magic potions. Many of the potions
	are the same so there is no need to create new object for each of them.
	Instead one object instance can represent multiple shelf items so memory
	footprint remains small.

# PLAIN WORDS

	It is used to minimize memory usage or computational expenses by sharing
	as much as possible with similar objects.

# WIKIPEDIA

	In computer programming, flyweight is a software design pattern. A
	flyweight is an object that minimizes memory use by sharing as much
	data as possible with other similar objects; it is a way to use
	objects in large numbers when a simple repeated representation
	would use an unacceptable amount of memory
	
# APPLICABILITY

	The Flyweight pattern's effectiveness depends heavily on how and
	where it's used. Apply the Flyweight pattern when all of the
	following are true

	- an application uses a large number of objects
	- storage costs are high because of the sheer quantity of objects
	- most object state can be made extrinsic
	- many groups of objects may be replaced by relatively few shared objects once extrinsic state is removed
	- the application doesn't depend on object identity. Since flyweight objects may be shared, identity tests will return true for conceptually distinct objects.